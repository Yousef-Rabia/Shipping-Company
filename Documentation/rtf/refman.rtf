{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Shipping Company  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.1 \par
}}Shipping Company}
{\comment Generated by doxygen 1.9.4.}
{\creatim \yr2022\mo5\dy25\hr22\min7\sec39}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Shipping Company}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.1\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Wed May 25 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A project by Cairo engineering students for programming for first graders, which is a project we are going to build a simulator for Shipping {\b Company} . \par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Project: Shipping-Company
\par}
{\tc\tcl2 \v Project: Shipping-Company}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Course Name: Data Structures and Algorithms
\par}
{\tc\tcl3 \v Course Name: Data Structures and Algorithms}
\par}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Course Code: CMP1040
\par}
{\tc\tcl3 \v Course Code: CMP1040}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
This is an educational project for Data Structures and Algorithms, written in C++ using Visual Studio IDE. It is a simulation of a space shipping company to deliver orders to users. So the company releases its trucks and assigns cargo to them every hour.
\par}
{\tc\tcl4 \v This is an educational project for Data Structures and Algorithms, written in C++ using Visual Studio IDE. It is a simulation of a space shipping company to deliver orders to users. So the company releases its trucks and assigns cargo to them every hour.}
\par}
\par}
\par}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Features
\par}
{\tc\tcl2 \v Features}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
There are 3 Modes:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Iteractive Mode: Writing the simulation's stages hour by hour on the console and create the output file at the end fo simulation.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Step By Step Mode: With every arbitary key press, the simulation move to the next stage (hour) and create the output file when the simulation's stages are finished.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Silent Mode: Create Output file of the simulation without showing the simulation stages on the console.\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
There is an input and output files:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The simulator read all the information and proccess them as it needs to start simulation. [input.txt]\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The output file contains the final statistics generated after the simulation. [output.txt]\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The simulation consists of:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Status of the shipping company at every hour.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Showing the numbers and IDs of the trucks in different states: (In Execution, In Checkup, In Avaliable) state\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Showing the numbers of the cargos in different states: (In Execution, In Completed, In Avaliable) state\par}
}
\par
\par}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Team Members:
\par}
{\tc\tcl2 \v Team Members:}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Yousef Mohamed El-Said Rabia\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Yousef Mohamed Hajjaj\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mahmoud Sobhy Rashid\par}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Professor Supervisor: Dr. Ahmed Hamdy
\par}
{\tc\tcl3 \v Professor Supervisor: Dr. Ahmed Hamdy}
\par}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Teacher Assistants Supervisor:
\par}
{\tc\tcl3 \v Teacher Assistants Supervisor:}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Eng. Eman Hossam\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Eng. Marwa \par}
\par
\par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Cargo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Company\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Event\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CancelEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PreparationEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PromoteEvent\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
LinkedList< Type >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LinkedList< Cargo * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Node< Type >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Node< Cargo * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Node< Event * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Node< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Node< Truck * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PriNode< Type >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PriNode< Cargo * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PriNode< Truck * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PriQueue< Type >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PriQueue< Cargo * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PriQueue< Truck * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Queue< Type >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Queue< Cargo * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Queue< Event * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Queue< Truck * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Stack< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Time\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Truck\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UI\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CancelEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cargo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Company} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Event} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LinkedList< Type >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Node< Type >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PreparationEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PriNode< Type >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PriQueue< Type >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PromoteEvent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Queue< Type >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Stack< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Time} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Truck} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UI} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CancelEvent.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cargo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Company.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manager of all operations that occur in the program })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Def.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Event.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LinkedList.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Node.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PreparationEvent.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PriNode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PriQueue.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PromoteEvent.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Queue.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Stack.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Time.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Truck.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UI.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CancelEvent Class Reference\par \pard\plain 
{\tc\tcl2 \v CancelEvent}
{\xe \v CancelEvent}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Inheritance diagram for CancelEvent:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_cancel_event.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CancelEvent} ({\b Company} *p, const {\b Time} &, int){\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:CancelEvent}
{\xe \v CancelEvent\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CancelEvent::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Event} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancelEvent.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancelEvent.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cargo Class Reference\par \pard\plain 
{\tc\tcl2 \v Cargo}
{\xe \v Cargo}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Cargo} (CARGO_TYPE T, const {\b Time} &PT, int id, float DD, float LT, double C){\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Cargo} (int id){\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b GetDistance} () const{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b GetCost} () const{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b GetLU_Time} () const{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

CARGO_TYPE {\b GetType} () const{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} & {\b GetPrepTime} (){\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PromoteToVip} (double ExtraMoney){\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} ({\b Cargo} *ptr){\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetID} () const{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Set_Truck_ID} (int id){\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Get_Truck_ID} (){\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Set_DT} ({\b Time} t){\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Set_WT} (int t){\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} & {\b Get_DT} (){\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} & {\b Get_WT} (){\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} & {\b Get_Preparation_Time} (){\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ostream & {\b operator<<} (ostream &out, const {\b Cargo} *c){\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Cargo.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Cargo.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Company Class Reference\par \pard\plain 
{\tc\tcl2 \v Company}
{\xe \v Company}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Company} (){\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct a new {\b Company} object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Start_Simuulation} (){\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Working_Hours} (){\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Truck_Controller} (){\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Off_Hours} (){\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

SIM_MODE {\b get_input_mode} (){\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b execute_mode} (SIM_MODE){\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b readFile} (string){\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b write_output_file} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
prepairs the output file at the end of the simulation }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Statistics_File} (int Delivered, string &text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statistics are collected at the end and sent to me to put in the output file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rest_in_waiting} ({\b Cargo} *car)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
time of rest in waiting }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} & {\b get_Sim_Time} (){\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} & {\b get_Nearest_Event_Time} (){\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Event} * {\b get_Nearest_Event} (){\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Advance_Sim_Time} (int=1){\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Auto_Promotion} (){\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Promote cargos that exceeds a certain waiting time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assign_cargo} (){\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b check_completed_cargo} (){\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b increment_cancelled} (){\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Deliver_cargos} (){\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print_Sim_Time} (){\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b InteractivePrinting} (){\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b StepByStepPrinting} (){\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b SilentPrinting} (){\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sim_Manager} (SIM_MODE Mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulation Manager take simulation mode and to the stable operation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_W_V_C} (){\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_W_S_C} (){\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_W_N_C} (){\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_check_up_v_trucks} (){\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_check_up_s_trucks} (){\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_check_up_n_trucks} (){\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_empty_VIP} (){\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_empty_Normal} (){\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_empty_Special} (){\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Events_empty} (){\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b AddCargo} ({\b Cargo} *){\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Waiting_To_Delivered} (){\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Upgrade_Normal_Cargo} (int id, int extra_money=0){\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Cancel_Normal_Cargo} (int id){\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Move_Trucks} (){\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Move_Truck} ({\b Truck} *&t){\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b All_Delivered} (){\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Output_Console} (){\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function print data on console }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ~Company} (){\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy the {\b Company} object. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v rest_in_waiting\:Company}
{\xe \v Company\:rest_in_waiting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Company::rest_in_waiting ({\b Cargo} *  {\i car})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
time of rest in waiting }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Cargo*} \cell }{car \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int \par
}}}}
{\xe \v Sim_Manager\:Company}
{\xe \v Company\:Sim_Manager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Company::Sim_Manager (SIM_MODE  {\i Mode})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simulation Manager take simulation mode and to the stable operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SIM_MODE} \cell }{Mode \cell }
{\row }
}
}}
{\xe \v Statistics_File\:Company}
{\xe \v Company\:Statistics_File}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Company::Statistics_File (int  {\i Delivered}, string &  {\i text})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Statistics are collected at the end and sent to me to put in the output file. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i int} \cell }{Delivered \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i string} \cell }{text \cell }
{\row }
}
}}
{\xe \v write_output_file\:Company}
{\xe \v Company\:write_output_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Company::write_output_file ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
prepairs the output file at the end of the simulation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true || false \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Company.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Company.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Event Class Reference\par \pard\plain 
{\tc\tcl2 \v Event}
{\xe \v Event}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Inheritance diagram for Event:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_event.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Event} ({\b Company} *p, const {\b Time} &T, int id){\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b Execute} ()=0{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} & {\b getTime} (){\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} {\b ET}{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b ID}{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Company} * {\b cPtr}{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Event.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LinkedList< Type > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v LinkedList< Type >}
{\xe \v LinkedList< Type >}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b InsertBegin} (Type item){\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b InsertIndex} (Type item, int index){\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b InsertEnd} (Type item){\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Type {\b getFirst} (){\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Type {\b getEnd} (){\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsEmpty} (){\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetCount} (){\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Find_Remove} (Type val, Type &x){\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b removeFirst} (Type &x){\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
LinkedList.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Node< Type > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v Node< Type >}
{\xe \v Node< Type >}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} (const Type anitem){\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} (const Type anitem, {\b Node}< Type > *nextptr){\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_item} (const Type anitem){\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_next} ({\b Node}< Type > *nextptr){\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Type {\b get_item} () const{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node}< Type > * {\b get_next} () const{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Node.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PreparationEvent Class Reference\par \pard\plain 
{\tc\tcl2 \v PreparationEvent}
{\xe \v PreparationEvent}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
Inheritance diagram for PreparationEvent:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_preparation_event.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PreparationEvent} ({\b Company} *p, CARGO_TYPE, const {\b Time} &, int, float, float, float){\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:PreparationEvent}
{\xe \v PreparationEvent\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PreparationEvent::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Event} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PreparationEvent.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PreparationEvent.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PriNode< Type > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v PriNode< Type >}
{\xe \v PriNode< Type >}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PriNode} (const Type anitem){\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PriNode} (const Type anitem, {\b PriNode}< Type > *nextptr){\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_item} (const Type anitem){\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_next} ({\b PriNode}< Type > *nextptr){\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_priority} (int p){\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Type {\b get_item} () const{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PriNode}< Type > * {\b get_next} () const{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b get_priority} (){\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PriNode.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PriQueue< Type > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v PriQueue< Type >}
{\xe \v PriQueue< Type >}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b EnQueue} (Type item, float priority=0){\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b DeQueue} (Type &x){\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b QueueEmpty} (){\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DistroyQueue} (){\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PriNode}< Type > * {\b GetFront} (){\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PriNode}< Type > * {\b GetRear} (){\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetCount} (){\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Type {\b Peek} (){\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PriQueue.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PromoteEvent Class Reference\par \pard\plain 
{\tc\tcl2 \v PromoteEvent}
{\xe \v PromoteEvent}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
Inheritance diagram for PromoteEvent:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_promote_event.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PromoteEvent} ({\b Company} *p, const {\b Time} &, int, float){\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Execute} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Execute\:PromoteEvent}
{\xe \v PromoteEvent\:Execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PromoteEvent::Execute (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Event} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PromoteEvent.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PromoteEvent.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Queue< Type > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v Queue< Type >}
{\xe \v Queue< Type >}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b EnQueue} (Type item){\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b DeQueue} (Type &x){\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b QueueEmpty} (){\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DistroyQueue} (){\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node}< Type > * {\b GetFront} (){\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node}< Type > * {\b GetRear} (){\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetCount} (){\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Type {\b Peek} (){\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Queue.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Stack< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v Stack< T >}
{\xe \v Stack< T >}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Stack} (const {\b Stack}< T > &R){\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b IntializeStack} (){\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsEmptyStack} (){\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b Stack}< T > & {\b operator=} (const {\b Stack}< T > &R){\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Push} (T data){\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Pop} (){\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const T & {\b Top} (){\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stack.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Time Class Reference\par \pard\plain 
{\tc\tcl2 \v Time}
{\xe \v Time}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} (int d, int h){\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} (string x){\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} (int h){\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTime} (int h){\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTime} (string x){\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b AdvanceTime} (int value){\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b printTime} (){\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getHour} (){\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getDay} (){\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Time_In_Hours} (){\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b Time_to_print} (){\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b Time} &){\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator>=} (const {\b Time} &){\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b operator-} (const {\b Time} &){\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} {\b operator+} (float x){\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Time.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Time.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Truck Class Reference\par \pard\plain 
{\tc\tcl2 \v Truck}
{\xe \v Truck}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Truck} (int id, TRUCK_TYPE T, int TC, float MT, int j, float S){\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TRUCK_TYPE {\b GetType} () const{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetCapacity} () const{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_finish_point} (const {\b Time} &){\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} {\b get_finish_point} (){\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b GetMaintenanceTime} () const{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b Get_nearest_dis} (){\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b GetSpeed} () const{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b GetDeliveryInterval} (){\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} {\b Get_nearest_stop} (){\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_nearest_stop} ({\b Time}, float){\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetJTC} (){\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetContainer_count} (){\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b restore_JTC} (){\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DecrementJTC} (){\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetID} () const{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_DInterval} (){\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b load} ({\b Cargo} *, float delivery_time){\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Cargo} * {\b unload} (){\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b count_down} (){\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b get_move_counter} (){\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Set_AT} (int h){\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b inc_TDC} (){\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b inc_N} (){\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Get_TDC} (){\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b Get_N} (){\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} {\b Get_AT} (){\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b utilization} ({\b Time} &Sim_Time){\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_container} (){\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Set_moving_time} ({\b Time} &Sim_Time){\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Time} {\b get_moving_time} (){\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ostream & {\b operator<<} (ostream &out, {\b Truck} *t){\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Truck.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Truck.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UI Class Reference\par \pard\plain 
{\tc\tcl2 \v UI}
{\xe \v UI}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

SIM_MODE {\b get_sim_mode} (){\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (string){\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getIntger} (){\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b getString} (){\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UI.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UI.cpp\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CancelEvent.h\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "Event.h"}\par
3 {\cf17 class }CancelEvent :\par
4     {\cf17 public} Event\par
5 \{\par
6 {\cf17 public}:\par
7     CancelEvent(Company* p, {\cf17 const} Time&, {\cf18 int});\par
8     {\cf20 //cancels a normal cargo}\par
9     {\cf18 void} Execute();      \par
10 \};\par
11 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cargo.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include"Def.h"}\par
3 {\cf21 #include "Time.h"}\par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <iostream>}\par
6 \par
7 {\cf17 class }Cargo\par
8 \{\par
9 {\cf17 private}:\par
10     Time Preparation_Time; {\cf20 //Time(day:hour) at which the cargo is ready to be loaded}\par
11     Time WT;\par
12     Time DT;\par
13     {\cf18 float} Load_Unload_Time;\par
14     CARGO_TYPE Type;\par
15     {\cf18 float} Delivery_Distance; {\cf20 //Km}\par
16     {\cf18 double} Cost;\par
17     {\cf18 int} ID;\par
18     {\cf18 int} Truck_ID;\par
19 \par
20 {\cf17 public}:\par
21 \par
22     Cargo(CARGO_TYPE T, {\cf17 const} Time& PT, {\cf18 int} {\cf18 id}, {\cf18 float} DD, {\cf18 float} LT, {\cf18 double} C);\par
23     Cargo({\cf18 int} {\cf18 id}); {\cf20 //Fake cargo just for comparison with id}\par
24     {\cf18 float} GetDistance() {\cf17 const};\par
25     {\cf18 double} GetCost() {\cf17 const};\par
26     {\cf18 float} GetLU_Time() {\cf17 const};\par
27     CARGO_TYPE GetType() {\cf17 const};\par
28     Time& GetPrepTime();\par
29     {\cf18 void} PromoteToVip({\cf18 double} ExtraMoney);\par
30     {\cf18 bool} operator==(Cargo* ptr);\par
31     {\cf18 int} GetID() {\cf17 const};\par
32     {\cf18 void} Set_Truck_ID({\cf18 int} {\cf18 id});\par
33     {\cf18 int} Get_Truck_ID();\par
34     {\cf18 void} Set_DT(Time t);\par
35     {\cf18 void} Set_WT({\cf18 int} t);\par
36     Time& Get_DT();\par
37     Time& Get_WT();\par
38     Time& Get_Preparation_Time();\par
39     {\cf17 friend} ostream& operator<<(ostream& out, {\cf17 const} Cargo* c);\par
40     \par
41 \};\par
42 \par
43 \par
44 \par
45 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Company.h File Reference\par \pard\plain 
{\tc\tcl2 \v Company.h}
{\xe \v Company.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manager of all operations that occur in the program. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Def.h"}\par
{\f2 #include "Cargo.h"}\par
{\f2 #include "Truck.h"}\par
{\f2 #include "UI.h"}\par
{\f2 #include "Queue.h"}\par
{\f2 #include "PriQueue.h"}\par
{\f2 #include "LinkedList.h"}\par
{\f2 #include <fstream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Company}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Manager of all operations that occur in the program. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright secured by YMY Team(c) 2022 \par
}}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Company.h\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
7 {\cf21 #pragma once}\par
8 {\cf21 #include "Def.h"}\par
9 {\cf21 #include "Cargo.h"}\par
10 {\cf21 #include "Truck.h"}\par
11 {\cf21 #include "UI.h"}\par
12 {\cf21 #include "Queue.h"}\par
13 {\cf21 #include "PriQueue.h"}\par
14 {\cf21 #include "LinkedList.h"}\par
15 {\cf21 #include <fstream>}\par
16 \par
17 {\cf17 class }Event;\par
18 \par
19 {\cf17 class }Company\par
20 \{\par
21     UI* ui_p;\par
22     Time Sim_Time;\par
23     ifstream Loaded;\par
24     {\cf20 //------------------------------------------------------}\par
25 \par
26     {\cf20 //Cargos}\par
27     PriQueue<Cargo*> W_V_C;     {\cf20 //waiting vip cargos}\par
28     Queue<Cargo*> W_S_C;        {\cf20 //waiting special cargos}\par
29     LinkedList<Cargo*> W_N_C;   {\cf20 //waiting normal cargos}\par
30     Queue<Cargo*> Delivered_cargo;\par
31 \par
32     {\cf20 //------------------------------------------------------}\par
33 \par
34     {\cf20 //Trucks}\par
35     Queue<Truck*> empty_VIP;\par
36     Queue<Truck*> empty_Special;\par
37     Queue<Truck*> empty_Normal;\par
38     Queue<Truck*> Check_up_Normal;\par
39     Queue<Truck*> Check_up_Special;\par
40     Queue<Truck*> Check_up_VIP;\par
41     PriQueue<Truck*> Moving_truck;\par
42 \par
43     Queue<Event*> Event_List;\par
44 \par
45     {\cf20 //-------------------------------------------------------}\par
46 \par
47     {\cf18 int} MaxWait;\par
48     {\cf18 int} AutoPro;\par
49     {\cf18 int} Num_of_events;\par
50 \par
51     {\cf18 int} nCap, sCap, vCap;\par
52     {\cf20 //Numbers of Trucks in each list}\par
53 \par
54     {\cf18 int} VIP_Trucks_count;\par
55     {\cf18 int} Normal_Trucks_count;\par
56     {\cf18 int} Special_Trucks_count;\par
57     {\cf18 int} Assigned_Trucks_count;\par
58     {\cf18 int} InCheck_Trucks_count;\par
59     {\cf18 int} Total_Trucks_count;\par
60 \par
61     {\cf20 //-------------------------------------------------------}\par
62     \par
63     \par
68     {\cf18 int} VIP_Cargos_count;\par
69     {\cf18 int} Normal_Cargos_count;\par
70     {\cf18 int} Special_Cargos_count;\par
71     {\cf18 int} Moving_Cargos_count;\par
72     {\cf18 int} Delivered_Cargos_count;\par
73     {\cf18 int} Total_Cargos_count;\par
74     {\cf18 int} Num_Promoted_cargos;\par
75 \par
76     {\cf20 //--------------------------------------------------------}\par
77     {\cf18 float} auto_promoted_count;\par
78     {\cf18 int} cancelled;\par
79     \par
80     {\cf20 //--------------------------------------------------------}\par
81     Truck* Loading_Normal;\par
82     Truck* Loading_Special;\par
83     Truck* Loading_VIP;\par
84 \par
85     {\cf20 //--------------------------------------------------------}\par
90 {\cf20 }    {\cf18 void} check_checkup_list();\par
91     {\cf18 void} check_to_available(Truck*&);\par
92     {\cf18 void} move_to_available(Truck*);\par
93     {\cf18 void} move_to_checkup(Truck*);\par
94     Truck* Pick_VIP_Truck();\par
95     Truck* Pick_Normal_Truck();\par
96     Truck* Pick_Special_Truck();\par
97     {\cf18 bool} load_VIP();\par
98     {\cf18 bool} load_Normal();\par
99     {\cf18 bool} load_Special();\par
100     {\cf18 bool} load_MaxW();\par
101     {\cf18 bool} Need_Checkup(Truck*);\par
102     {\cf18 bool} in_working(Time T);\par
103     {\cf18 int} Loading_count();\par
104 \par
105 {\cf17 public}:\par
110     Company();\par
111     {\cf18 void} Start_Simuulation();\par
112     {\cf18 void} Working_Hours();\par
113     {\cf18 void} Truck_Controller();\par
114     {\cf18 void} Off_Hours();\par
115 \par
116     {\cf20 // Reading data function}\par
117     SIM_MODE get_input_mode() ;\par
118     {\cf18 void} execute_mode(SIM_MODE);\par
119     {\cf18 bool} readFile({\cf18 string});\par
125     {\cf18 bool} write_output_file();\par
131     {\cf18 void} Statistics_File({\cf18 int} Delivered,{\cf18 string} & text);\par
138     {\cf18 int} rest_in_waiting(Cargo* car);\par
139     Time& get_Sim_Time() ;\par
140     Time& get_Nearest_Event_Time();\par
141     Event* get_Nearest_Event();\par
142     {\cf18 void} Advance_Sim_Time({\cf18 int} = 1);\par
147     {\cf18 void} Auto_Promotion();\par
148     {\cf20 // Simulation Functions}\par
149     {\cf18 void} assign_cargo();\par
150     {\cf18 void} check_completed_cargo();\par
151     {\cf18 void} increment_cancelled();\par
152     {\cf18 void} Deliver_cargos();\par
153 \par
154     {\cf20 //Printing Functions}\par
155     {\cf18 void} Print_Sim_Time();\par
156     {\cf18 void} InteractivePrinting();\par
157     {\cf18 void} StepByStepPrinting();\par
158     {\cf18 void} SilentPrinting();\par
164     {\cf18 void} Sim_Manager(SIM_MODE Mode);\par
165 \par
166     {\cf20 //---------------------------------------}\par
167     {\cf18 void} print_W_V_C();\par
168     {\cf18 void} print_W_S_C();\par
169     {\cf18 void} print_W_N_C();\par
170 \par
171     {\cf20 //---------------------------------------}\par
172     {\cf18 void} print_check_up_v_trucks();\par
173     {\cf18 void} print_check_up_s_trucks();\par
174     {\cf18 void} print_check_up_n_trucks();\par
175     {\cf18 void} print_empty_VIP();\par
176     {\cf18 void} print_empty_Normal();\par
177     {\cf18 void} print_empty_Special();\par
178     {\cf20 //--------------------------------------}\par
179     {\cf18 bool} Events_empty();\par
180     \par
181     {\cf18 void} AddCargo(Cargo*);\par
182     {\cf18 void} Waiting_To_Delivered();\par
183 \par
184     {\cf18 bool} Upgrade_Normal_Cargo({\cf18 int} {\cf18 id},{\cf18 int} extra_money=0);\par
185     {\cf18 bool} Cancel_Normal_Cargo({\cf18 int} {\cf18 id});\par
186     {\cf18 void} Move_Trucks();         {\cf20 //checks for truck movement and calls Move_Truck accordingly}\par
187     {\cf18 void} Move_Truck(Truck*& t); {\cf20 //actually moves the truck, adding it to the Moving_Truck queue}\par
188 \par
189     {\cf18 bool} All_Delivered();       {\cf20 //checks that all waiting and moving lists are empty}\par
190 \par
191     {\cf20 //------------------------------------------------------------}\par
196 {\cf20 }    {\cf18 void} Output_Console();\par
197 \par
198 \par
199     {\cf20 //Destructor}\par
204 {\cf20 }    ~Company()\{\}\par
205 \par
206 \par
207 \};\par
208 \par
209 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Def.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf17 enum class} SIM_MODE\par
3 \{\par
4     INTERACTIVE,\par
5     STEP_BY_STEP,\par
6     SILENT\par
7 \};\par
8 \par
9 \par
10 {\cf17 enum class} TRUCK_TYPE \{\par
11     VIP,\par
12     SPECIAL,\par
13     NORMAL\par
14 \};\par
15 \par
16 {\cf17 enum class} TRUCK_STATUS \{\par
17     WAITING,\par
18     LOADING,\par
19     MOVING,\par
20     GOING_BACK,\par
21     CHECKUP\par
22 \};\par
23 \par
24 {\cf17 enum class} CARGO_TYPE \{\par
25     VIP,\par
26     SPECIAL,\par
27     NORMAL\par
28 \};\par
29 \par
30 {\cf17 enum class} CARGO_STATUS \{\par
31     READY,\par
32     LOADED,\par
33     MOVING,\par
34     COMPLETED,\par
35     CANCELLED\par
36 \};\par
37 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Event.h\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "Time.h"}\par
3 {\cf21 #include "Company.h"}\par
4 \par
5 {\cf17 class }Event\par
6 \{\par
7     UI* UI_P;\par
8 \par
9 {\cf17 protected}:\par
10     Time ET;\par
11     {\cf18 int} ID;\par
12     Company* cPtr;\par
13 {\cf17 public}:\par
14     Event(Company* p, {\cf17 const} Time& T, {\cf18 int} {\cf18 id})\par
15     \{\par
16         cPtr = p;\par
17         ID = id;\par
18         ET = T;\par
19     \}\par
20     {\cf20 //pure virtual function, definition is different for each event class}\par
21     {\cf17 virtual} {\cf18 void} Execute() = 0;\par
22     Time& getTime()\par
23     \{\par
24         {\cf19 return} ET;\par
25     \}\par
26     {\cf17 virtual} ~Event()\par
27     \{\par
28         {\cf17 delete} UI_P;\par
29     \}\par
30 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LinkedList.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include"Node.h"}\par
3 {\cf21 #include <iostream>}\par
4 {\cf17 using namespace }std;\par
5 {\cf21 #include "Cargo.h"}\par
6 {\cf21 #include "Truck.h"}\par
7 {\cf17 template}<{\cf17 class} Type>\par
8 {\cf17 class }LinkedList\par
9 \{\par
10 {\cf17 private}:\par
11     {\cf18 int} count;\par
12     Node<Type>* First;\par
13     Node<Type>* End;\par
14 {\cf17 public}:\par
15     LinkedList()\par
16     \{\par
17         First = NULL;\par
18         End = NULL;\par
19         count = 0;\par
20     \}\par
21     {\cf18 void} InsertBegin(Type item)\par
22     \{\par
23         Node<Type>* temp;\par
24         temp = {\cf17 new} Node<Type>;\par
25         temp->set_item(item);\par
26         {\cf19 if} (IsEmpty())\par
27             End = temp;\par
28         {\cf19 else}\par
29         temp->set_next(First);\par
30         First = temp;\par
31         count++;\par
32     \}\par
33     {\cf18 bool} InsertIndex(Type item, {\cf18 int} index)\par
34     \{\par
35         {\cf19 if} (index <= count && index >= 0)\par
36         \{\par
37             {\cf19 if} (index == 0)\par
38                 InsertBegin(item);\par
39             {\cf19 else} {\cf19 if} (index == count)\par
40                 InsertEnd(item);\par
41             {\cf19 else}\par
42             \{\par
43                 Node<Type>* temp;\par
44                 temp = {\cf17 new} Node<Type>;\par
45                 Node<Type>* cur = First;\par
46                 {\cf19 for} ({\cf18 int} i = 0; i < index - 1; i++)\par
47                     cur = cur->get_next;\par
48                 temp->set_next(cur->get_next());\par
49                 cur->set_next(temp);\par
50                 count++;\par
51             \}\par
52             {\cf19 return} true ;\par
53         \}\par
54         {\cf19 else}\par
55         {\cf19 return} {\cf17 false};\par
56     \}\par
57     {\cf18 void} InsertEnd(Type item)\par
58     \{\par
59         Node<Type>* temp;\par
60         temp = {\cf17 new} Node<Type>;\par
61         temp->set_item(item);\par
62         {\cf19 if} (IsEmpty())\par
63             First = temp;\par
64         {\cf19 else}\par
65             End->set_next(temp);\par
66         End = temp;\par
67         count++;\par
68     \}\par
69     Type getFirst()\par
70     \{\par
71         {\cf19 if} (!IsEmpty())\par
72             {\cf19 return} First->get_item();\par
73         {\cf19 else}\par
74             {\cf19 return} NULL;\par
75     \}\par
76 \par
77     Type getEnd()\par
78     \{\par
79         {\cf19 if} (!IsEmpty())\par
80             {\cf19 return} End->get_item();\par
81         {\cf19 else}\par
82             {\cf19 return} NULL;\par
83     \}\par
84 \par
85     {\cf18 bool} IsEmpty()\par
86     \{\par
87         {\cf19 return} !count;\par
88     \}\par
89 \par
90     {\cf18 int} GetCount()\par
91     \{\par
92         {\cf19 return} count;\par
93     \}\par
94     {\cf18 bool} Find_Remove(Type val,Type& x)\par
95     \{\par
96         Node<Type>* prev = NULL;\par
97         Node<Type>* ptr = First;\par
98         {\cf19 while} (ptr)\par
99         \{\par
100             {\cf19 if} (*(ptr->get_item()) == val)\par
101             \{\par
102                 {\cf19 if} (prev == NULL)\par
103                 \{\par
104                     x = ptr->get_item();\par
105                     First = First->get_next();\par
106                 \}\par
107                 {\cf19 else}\par
108                 \{\par
109                     x = ptr->get_item();\par
110                     prev->set_next(ptr->get_next());\par
111                 \}\par
112                 count--;\par
113                 {\cf19 return} {\cf17 true};\par
114             \}\par
115             prev = ptr;\par
116             ptr = ptr->get_next();\par
117         \}\par
118         {\cf19 return} {\cf17 false};\par
119     \}\par
120 \par
121     {\cf18 bool} removeFirst(Type& x)\par
122     \{\par
123         {\cf19 if} (count == 0)\par
124             {\cf19 return} {\cf17 false};\par
125 \par
126         Node<Type>* ptr;\par
127         ptr = First;\par
128         {\cf19 if} (count == 1)\par
129         \{\par
130             First = NULL;\par
131             End = NULL;\par
132         \}\par
133         {\cf19 else}\par
134         \{\par
135             First= First->get_next();\par
136         \}\par
137         x = ptr->get_item();\par
138         count--;\par
139         {\cf19 return} {\cf17 true};\par
140     \}\par
141     {\cf18 void} print()\par
142     \{\par
143         Node<Type>* temp = First;\par
144         {\cf19 while} (temp)\par
145         \{\par
146             cout << (temp->get_item());\par
147             temp = temp->get_next();\par
148             {\cf19 if} (temp)\par
149                 cout << {\cf23 ','};\par
150         \}\par
151     \}\par
152 \par
153 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Node.h\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf17 template}<{\cf17 class} Type>\par
3 {\cf17 class }Node\par
4 \{\par
5 {\cf17 private}:\par
6     Type item;\par
7     {\cf18 int} Priority;\par
8     Node<Type>* next;\par
9 {\cf17 public}:\par
10     Node() :next({\cf17 nullptr})\par
11     \{\par
12     \}\par
13     Node({\cf17 const} Type anitem)\par
14     \{\par
15         item = anitem;\par
16         next = {\cf17 nullptr};\par
17     \}\par
18     Node({\cf17 const} Type anitem, Node<Type>* nextptr)\par
19     \{\par
20         item = anitem;\par
21         next = nextptr;\par
22     \}\par
23     {\cf18 void} set_item({\cf17 const} Type anitem) \{ item = anitem; \}\par
24     {\cf18 void} set_next(Node<Type>* nextptr) \{ next = nextptr; \}\par
25 \par
26     Type get_item(){\cf17 const }\par
27 {\cf17     }\{\par
28         {\cf19 return} item;\par
29     \}\par
30     Node<Type>* get_next(){\cf17 const }\{ {\cf19 return} next; \}\par
31 \par
32 \par
33 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PreparationEvent.h\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "Event.h"}\par
3 {\cf21 #include "Time.h"}\par
4 {\cf21 #include "Def.h"}\par
5 {\cf17 class }PreparationEvent :\par
6     {\cf17 public} Event\par
7 \{\par
8     CARGO_TYPE type;\par
9     {\cf18 float} dist, loadTime, cost;\par
10 {\cf17 public}:\par
11     PreparationEvent(Company* p, CARGO_TYPE, {\cf17 const} Time&, {\cf18 int}, {\cf18 float}, {\cf18 float}, {\cf18 float});\par
12     {\cf18 void} Execute();\par
13 \};\par
14 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PriNode.h\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf17 template}<{\cf17 class} Type>\par
3 {\cf17 class }PriNode\par
4 \{\par
5 \par
6     {\cf17 private}:\par
7         Type item;\par
8         {\cf18 int} Priority;\par
9         PriNode<Type>* next;\par
10     {\cf17 public}:\par
11         PriNode() :next({\cf17 nullptr})\par
12         \{\par
13             Priority = 0;\par
14         \}\par
15         PriNode({\cf17 const} Type anitem)\par
16         \{\par
17             item = anitem;\par
18             next = {\cf17 nullptr};\par
19             Priority = 0;\par
20         \}\par
21         PriNode({\cf17 const} Type anitem, PriNode<Type>* nextptr)\par
22         \{\par
23             item = anitem;\par
24             next = nextptr;\par
25             Priority = 0;\par
26         \}\par
27         {\cf18 void} set_item({\cf17 const} Type anitem) \{ item = anitem; \}\par
28         {\cf18 void} set_next(PriNode<Type>* nextptr) \{ next = nextptr; \}\par
29         {\cf18 void} set_priority({\cf18 int} p)\par
30         \{\par
31             Priority = p;\par
32         \}\par
33 \par
34         Type get_item(){\cf17 const }\{ {\cf19 return} item; \}\par
35         PriNode<Type>* get_next(){\cf17 const }\{ {\cf19 return} next; \}\par
36         {\cf18 int} get_priority()\par
37         \{\par
38             {\cf19 return} Priority;\par
39         \}\par
40 \par
41     \};\par
42 \par
43 \par
44 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PriQueue.h\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "PriNode.h"}\par
3 {\cf21 #include<iostream>}\par
4 \par
5 {\cf17 template}<{\cf17 class} Type>\par
6 {\cf17 class }PriQueue \par
7 \{\par
8 \par
9 {\cf17 private}:\par
10     PriNode<Type>* front;\par
11     {\cf18 int} count;\par
12     PriNode<Type>* rear;\par
13 {\cf17 public}:\par
14     PriQueue()\par
15     \{\par
16         front = {\cf17 nullptr};\par
17         rear = {\cf17 nullptr};\par
18         count = 0;\par
19     \}\par
20     {\cf18 bool} EnQueue(Type item, {\cf18 float} priority = 0)\par
21     \{\par
22         PriNode<Type>* temp;\par
23         PriNode<Type>* cur = front;\par
24         temp = {\cf17 new} PriNode<Type>;\par
25         temp->set_item(item);\par
26         temp->set_priority(priority);\par
27         {\cf19 if} (QueueEmpty())\par
28         \{\par
29             front = temp;\par
30             rear = temp;\par
31 \par
32         \}\par
33         {\cf19 else} {\cf19 if} (front->get_priority() < priority)\par
34         \{\par
35             temp->set_next(front);\par
36             front = temp;\par
37         \}\par
38         {\cf19 else}\par
39         \{\par
40             {\cf19 while} (cur->get_next() != NULL && cur->get_next()->get_priority() >= priority)\par
41                 cur = cur->get_next();\par
42             {\cf19 if} (!cur->get_next())\par
43                 rear = temp;\par
44             temp->set_next(cur->get_next());\par
45             cur->set_next(temp);\par
46 \par
47         \}\par
48 \par
49         count++;\par
50         {\cf19 return} {\cf17 true};\par
51 \par
52     \}\par
53     {\cf18 bool} DeQueue(Type& x)\par
54     \{\par
55         {\cf19 if} (count == 0)\par
56             {\cf19 return} {\cf17 false};\par
57         PriNode<Type>* delptr;\par
58         delptr = front;\par
59         {\cf19 if} (count == 1)\par
60         \{\par
61             rear = NULL;\par
62             front = NULL;\par
63         \}\par
64         {\cf19 else}\par
65         \{\par
66             front = front->get_next();\par
67         \}\par
68         delptr->set_next({\cf17 nullptr});\par
69         x = delptr->get_item();\par
70         count--;\par
71         {\cf19 return} {\cf17 true};\par
72     \}\par
73     {\cf18 bool} QueueEmpty()\par
74     \{\par
75         {\cf19 return} !count;\par
76     \}\par
77     {\cf18 void} DistroyQueue()\par
78     \{\par
79         Type x;\par
80         {\cf18 int} c = count;\par
81         {\cf19 for} ({\cf18 int} i = 0; i < c; i++)\par
82             DeQueue(x);\par
83     \}\par
84     PriNode<Type>* GetFront()\par
85     \{\par
86         {\cf19 return} front;\par
87     \}\par
88     PriNode<Type>* GetRear()\par
89     \{\par
90         {\cf19 return} rear;\par
91     \}\par
92     {\cf18 int} GetCount()\par
93     \{\par
94         {\cf19 return} count;\par
95     \}\par
96     Type Peek()\par
97     \{\par
98         {\cf19 if} (!QueueEmpty())\par
99             {\cf19 return} front->get_item();\par
100         {\cf19 else}\par
101             {\cf19 return} NULL;\par
102     \}\par
103 \par
104     ~PriQueue()\par
105     \{\par
106         DistroyQueue();\par
107     \}\par
108 \par
109     {\cf18 void} print()\par
110     \{\par
111         PriNode<Type>* temp = front;\par
112         {\cf19 while} (temp)\par
113         \{\par
114             cout << (temp->get_item());\par
115             temp = temp->get_next();\par
116             {\cf19 if} (temp)\par
117                 cout << {\cf23 ','};\par
118         \}\par
119     \}\par
120 \};\par
121 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PromoteEvent.h\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "Event.h"}\par
3 {\cf17 class }PromoteEvent :\par
4     {\cf17 public} Event\par
5 \{\par
6     {\cf18 float} ExtraMoney;\par
7 {\cf17 public}:\par
8     PromoteEvent(Company* p, {\cf17 const} Time&, {\cf18 int}, {\cf18 float});\par
9     {\cf18 void} Execute();\par
10 \};\par
11 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Queue.h\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include"Node.h"}\par
3 {\cf21 #include <iostream>}\par
4 {\cf17 using namespace }std;\par
5 \par
6 {\cf17 template}<{\cf17 class} Type>\par
7 {\cf17 class }Queue\par
8 \{\par
9 {\cf17 private}:\par
10     Node<Type>* front;\par
11     {\cf18 int} count;\par
12     Node<Type>* rear;\par
13 {\cf17 public}:\par
14     Queue()\par
15     \{\par
16         front = {\cf17 nullptr};\par
17         rear = {\cf17 nullptr};\par
18         count = 0;\par
19     \}\par
20      {\cf18 bool} EnQueue(Type item)\par
21     \{\par
22         Node<Type>* temp;\par
23         temp = {\cf17 new} Node<Type>;\par
24         temp->set_item(item);\par
25         {\cf19 if} (QueueEmpty())\par
26             front = temp;\par
27         {\cf19 else}\par
28             rear->set_next(temp);\par
29 \par
30         rear = temp;\par
31         count++;\par
32         {\cf19 return} {\cf17 true};\par
33 \par
34     \}\par
35     {\cf18 bool} DeQueue(Type& x)\par
36     \{\par
37         {\cf19 if} (count == 0)\par
38             {\cf19 return} {\cf17 false};\par
39         Node<Type>* delptr;\par
40         delptr = front;\par
41         {\cf19 if} (count == 1)\par
42         \{\par
43             rear = NULL;\par
44             front = NULL;\par
45         \}\par
46         {\cf19 else}\par
47         \{\par
48             front = front->get_next();\par
49         \}\par
50         delptr->set_next({\cf17 nullptr});\par
51         x = delptr->get_item();\par
52         count--;\par
53         {\cf19 return} {\cf17 true};\par
54     \}\par
55     {\cf18 bool} QueueEmpty()\par
56     \{\par
57         {\cf19 return} !count;\par
58     \}\par
59     {\cf18 void} DistroyQueue()\par
60     \{\par
61         Type x;\par
62         {\cf18 int} c = count;\par
63         {\cf19 for} ({\cf18 int} i = 0; i < c; i++)\par
64             DeQueue(x);\par
65     \}\par
66     Node<Type>* GetFront()\par
67     \{\par
68         {\cf19 return} front;\par
69     \}\par
70     Node<Type>* GetRear()\par
71     \{\par
72         {\cf19 return} rear;\par
73     \}\par
74     {\cf18 int} GetCount()\par
75     \{\par
76         {\cf19 return} count;\par
77     \}\par
78     Type Peek()\par
79     \{\par
80         {\cf19 if} (!QueueEmpty())\par
81             {\cf19 return} front->get_item();\par
82         {\cf19 else}\par
83             {\cf19 return} NULL;\par
84     \}\par
85     \par
86     ~Queue()\par
87     \{\par
88         DistroyQueue();\par
89     \}\par
90 \par
91     {\cf18 void} print()\par
92     \{\par
93         Node<Type>* temp = front;\par
94         {\cf19 while} (temp)\par
95         \{\par
96             cout << temp->get_item();\par
97             temp = temp->get_next();\par
98             {\cf19 if} (temp)\par
99                 cout << {\cf23 ','};\par
100         \}\par
101     \}\par
102 \};\par
103 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Stack.h\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #include"Node.h"}\par
2 {\cf21 #include <cassert>}\par
3 \par
4 {\cf17 template} <{\cf17 class} T>\par
5 {\cf17 class }Stack\par
6 \{\par
7     Node<T>* Head;\par
8 \par
9     {\cf18 void} copyStack({\cf17 const} Stack<T>& R) \{\par
10         {\cf19 if} (R.Head == NULL)\par
11         \{\par
12             IntializeStack();\par
13             {\cf19 return};\par
14         \}\par
15         {\cf19 if} (R.Head == Head)\par
16             {\cf19 return};\par
17         IntializeStack();\par
18         Node<T>* ptr;\par
19         Node<T>* Rptr;\par
20         Head = {\cf17 new} Node<T>;\par
21         Head->setitem(R.Head->getitem());\par
22         ptr = Head;\par
23         Rptr = R.Head->getnext();\par
24         {\cf19 while} (Rptr) \{\par
25             ptr->getnext() = {\cf17 new} Node<T>;\par
26             ptr = ptr->getnext();\par
27             ptr->setitem(Rptr->getitem());\par
28             Rptr = Rptr->getnext();\par
29 \par
30         \}\par
31         ptr->setnext(NULL);\par
32     \}\par
33 {\cf17 public}:\par
34     Stack() \{\par
35         Head = NULL;\par
36     \}\par
37     Stack({\cf17 const} Stack<T>& R) \{\par
38         Head = NULL;\par
39         copyStack(R);\par
40 \par
41     \}\par
42     {\cf18 void} IntializeStack() \{\par
43         {\cf19 if} (Head == NULL)\par
44             {\cf19 return};\par
45         Node<T>* ptr = Head;\par
46         Node<T>* nextptr;\par
47 \par
48 \par
49         {\cf19 while} (ptr) \{\par
50             nextptr = ptr->getnext();\par
51             {\cf17 delete} ptr;\par
52             ptr = nextptr;\par
53         \}\par
54         Head = NULL;\par
55     \}\par
56     {\cf18 bool} IsEmptyStack() \{\par
57         {\cf19 return} (Head == NULL);\par
58     \}\par
59 \par
60     {\cf17 const} Stack<T>& operator =({\cf17 const} Stack<T>& R) \{\par
61         copyStack();\par
62         {\cf19 return} *{\cf17 this};\par
63 \par
64     \}\par
65     {\cf18 void} Push(T data) \{\par
66         Node <T>* ptr = {\cf17 new} Node<T>(data);\par
67         {\cf19 if} (Head == NULL)\par
68         \{\par
69             Head = ptr;\par
70             Head->setnext(NULL);\par
71             {\cf19 return};\par
72         \}\par
73 \par
74         ptr->setnext(Head);\par
75         Head = ptr;\par
76     \}\par
77 \par
78     {\cf18 bool} Pop() \{\par
79         {\cf19 if} (IsEmptyStack())\par
80             {\cf19 return} {\cf17 false};\par
81         Node <T>* ptr = Head;\par
82         Head = Head->getnext();\par
83         {\cf17 delete} ptr;\par
84         {\cf19 return} {\cf17 true};\par
85     \}\par
86     {\cf17 const} T& Top() \{\par
87         assert(Head != NULL);\par
88         {\cf19 return} Head->getitem();\par
89     \}\par
90     ~Stack() \{\par
91         IntializeStack();\par
92     \}\par
93 \};\par
94 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Time.h\par \pard\plain 
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include <string>}\par
3 {\cf21 #include "UI.h"}\par
4 {\cf17 using namespace }std;\par
5 \par
6 {\cf17 class }Time\par
7 \{\par
8     UI UI_P;\par
9     {\cf18 int} hour;\par
10     {\cf18 int} day;\par
11 {\cf17 public}:\par
12     Time();\par
13     Time({\cf18 int} d , {\cf18 int} h);\par
14     Time({\cf18 string} x);\par
15     Time({\cf18 int} h);\par
16     {\cf18 void} setTime({\cf18 int} h);\par
17     {\cf18 void} setTime({\cf18 string} x);\par
18     {\cf18 void} AdvanceTime({\cf18 int} value);\par
19     {\cf18 void} printTime();\par
20     {\cf18 int} getHour();\par
21     {\cf18 int} getDay();\par
22     {\cf18 int} Time_In_Hours();   {\cf20 //returns (24*day+hour) which is the total number of hours }\par
23     {\cf18 string} Time_to_print();\par
24     {\cf18 bool} operator==({\cf17 const} Time&);\par
25     {\cf18 bool} operator>=({\cf17 const} Time&);\par
26     {\cf18 int} operator-({\cf17 const} Time&);\par
27     Time operator +({\cf18 float} x);\par
28     ~Time();\par
29 \};\par
30 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Truck.h\par \pard\plain 
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include<string>}\par
3 {\cf21 #include"Def.h"}\par
4 {\cf21 #include "Cargo.h"}\par
5 {\cf21 #include "PriQueue.h"}\par
6 \par
7 {\cf17 using namespace }std;\par
8 {\cf17 class }Truck\par
9 \{\par
10 {\cf17 private}:\par
11     UI* ui_p;\par
12     PriQueue<Cargo*>container;\par
13     TRUCK_TYPE Type; \par
14     {\cf18 int} Truck_Capacity; {\cf20 //# of cargos}\par
15     {\cf18 float} Maintenance_Time; {\cf20 //hours}\par
16     {\cf18 float} Speed; {\cf20 //Km/h}\par
17     {\cf18 int} J;  {\cf20 // journeys untill checkup}\par
18     {\cf18 int} Journeys_Till_Check; \par
19     {\cf18 float} Delivery_Interval; {\cf20 //Time to deliver all cargos & comeback, Calculated}\par
20     {\cf18 float} Delivery_Distance; {\cf20 //distance of the furthest cargo in container}\par
21     Time Nearest_stop; {\cf20 // the delivery time for the nearsest cargo}\par
22     {\cf18 float} Nearest_dis;{\cf20 // distance for the nearest cargo}\par
23     {\cf18 int} ID;\par
24     {\cf18 int} move_counter;   {\cf20 //initialized with the highest load_time cargo in the container, once it reaches 0 the truck moves.}\par
25     Time finish_point; {\cf20 // when the checkup finishes}\par
26     Time AT;\par
27     {\cf18 int} TDC;\par
28     {\cf18 int} N;\par
29     Time moving_time;\par
30 \par
31 {\cf17 public}:\par
32     Truck({\cf18 int} {\cf18 id}, TRUCK_TYPE T, {\cf18 int} TC, {\cf18 float} MT, {\cf18 int} j, {\cf18 float} S);\par
33     TRUCK_TYPE GetType() {\cf17 const};\par
34     {\cf18 int} GetCapacity() {\cf17 const};\par
35     {\cf18 void} set_finish_point({\cf17 const} Time&);\par
36     Time get_finish_point();\par
37     {\cf18 float} GetMaintenanceTime() {\cf17 const};\par
38     {\cf18 float} Get_nearest_dis();\par
39     {\cf18 float} GetSpeed() {\cf17 const};\par
40     {\cf18 float} GetDeliveryInterval();\par
41     Time Get_nearest_stop();\par
42     {\cf18 void} set_nearest_stop( Time,{\cf18 float});\par
43     {\cf18 int} GetJTC();\par
44     {\cf18 int} GetContainer_count();\par
45     {\cf18 void} restore_JTC();\par
46     {\cf18 void} DecrementJTC();\par
47     {\cf18 int} GetID() {\cf17 const};\par
48     {\cf18 void} set_DInterval();\par
49     {\cf18 void} load(Cargo*, {\cf18 float} delivery_time);\par
50     Cargo* unload();\par
51     {\cf18 void} count_down();\par
52     {\cf18 int} get_move_counter();\par
53     {\cf18 void} Set_AT({\cf18 int} h);\par
54     {\cf18 void} inc_TDC();\par
55     {\cf18 void} inc_N();\par
56     {\cf18 int} Get_TDC();\par
57     {\cf18 int} Get_N();\par
58     Time Get_AT();\par
59     {\cf18 float} utilization(Time& Sim_Time);\par
60     {\cf18 void} print_container();\par
61     {\cf18 void} print();\par
62     {\cf18 void} Set_moving_time(Time& Sim_Time);\par
63     Time get_moving_time();\par
64     {\cf17 friend} ostream& operator<<(ostream& out, Truck* t);\par
65 \};\par
66 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UI.h\par \pard\plain 
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #include "Def.h"}\par
3 {\cf21 #include <iostream>}\par
4 {\cf21 #include <string>}\par
5 {\cf17 using namespace }std;\par
6 \par
7 {\cf17 class }UI\par
8 \{\par
9 \par
10 {\cf17 public}:\par
11     UI();\par
12     SIM_MODE get_sim_mode();\par
13     {\cf18 void} print({\cf18 string});\par
14     {\cf18 int} getIntger();\par
15     {\cf18 string} getString();\par
16 \};\par
17 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
